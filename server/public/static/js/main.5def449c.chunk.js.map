{"version":3,"sources":["redux/action-type.ts","redux/app-state.ts","redux/store.ts","redux/reducer.ts","models/Vacation.ts","components/vacation-card-for-admin/vacationCardForAdmin.tsx","components/admin/admin.tsx","components/charts/charts.tsx","components/header/header.tsx","components/login/login.tsx","components/register/register.tsx","components/vacation-card/vacationCard.tsx","components/vacations/vacations.tsx","components/layout/layout.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","store","createStore","oldAppState","action","newAppState","type","ChangeLoginStatus","userType","payload","GetAllVacations","vacations","AddVacation","push","DeleteVacation","filter","vacation","id","UpdateVacation","i","length","console","log","isFollowing","splice","follow","map","followers","unfollow","getSocket","socket","JSON","parse","sessionStorage","getItem","Vacation","destination","description","imageUrl","startDate","endDate","price","VacationCardForAdmin","props","edit","setState","isEditing","deleteVacation","a","state","isNewVacation","axios","delete","dispatch","alert","response","data","error","updateVacation","put","discardChanges","setDestination","args","target","value","setDescription","setPrice","setStartDate","date","getDateFormatToDisplay","setEndDate","setUrl","addVacation","post","addedVacation","getTodayDate","dateString","slice","todayDate","Date","toJSON","getDateFormatForHtmlInputTag","dateArr","split","undefined","className","icon","faEdit","onClick","this","faTrashAlt","htmlFor","name","onChange","rows","cols","maxLength","placeholder","Component","Admin","unsubscribeStore","adminValidation","getState","history","vacationsArr","subscribe","defaults","headers","common","get","setItem","stringify","io","query","connect","Charts","getVacationDataForChart","vacationsDataArr","vac","getTickValues","retArr","getTickFormat","domainPadding","style","tickLabels","fontSize","tickValues","tickFormat","dependentAxis","label","x","y","Header","unsubscribe","logout","removeItem","disconnect","goToReports","goToAdmin","goToLogin","withRouter","Login","setUserName","username","setPassword","password","login","serverResponse","token","isFailedLogin","nevigateToRegister","Register","setFullName","fullname","isPasswordValid","register","href","VacationCard","vacationId","src","alt","faHeart","size","Vacations","customerValidation","getVacations","sort","b","on","Layout","path","component","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5def449c.chunk.js","sourcesContent":["export enum ActionType {\r\n    GetAllVacations,\r\n    AddVacation,\r\n    DeleteVacation,\r\n    UpdateVacation,\r\n    ChangeLoginStatus,\r\n    follow,\r\n    unfollow,\r\n    getSocket   \r\n}","import { Socket } from \"socket.io-client\";\r\nimport Vacation from \"../models/Vacation\";\r\n\r\nexport class AppState {\r\n    public vacations: Vacation[] = JSON.parse(sessionStorage.getItem(\"vacations\"));\r\n    public userType: string = sessionStorage.getItem(\"userType\") != null? sessionStorage.getItem(\"userType\"): \"\";\r\n    public socket: Socket;\r\n}","import { createStore } from \"redux\";\r\nimport { reduce } from \"./reducer\";\r\nimport { AppState } from \"./app-state\";\r\n\r\nexport const store = createStore(reduce, new AppState());\r\n","import { AppState } from \"./app-state\";\r\nimport { ActionType } from \"./action-type\";\r\nimport { Action } from \"./action\";\r\nimport Vacation from \"../models/Vacation\";\r\n\r\n// This function is NOT called direcrtly by you\r\nexport function reduce(oldAppState: AppState, action: Action): AppState {\r\n    // Cloning the oldState (creating a copy)\r\n    const newAppState = { ...oldAppState };\r\n\r\n    switch (action.type) {\r\n        case ActionType.ChangeLoginStatus:\r\n            newAppState.userType = action.payload;\r\n            break;\r\n        case ActionType.GetAllVacations:\r\n            newAppState.vacations = action.payload;\r\n            break;\r\n        case ActionType.AddVacation:\r\n            newAppState.vacations.push(action.payload);\r\n            break;\r\n        case ActionType.DeleteVacation:\r\n            newAppState.vacations = newAppState.vacations.filter((vacation) => {\r\n                return vacation.id !== action.payload;\r\n            });\r\n            break;\r\n        case ActionType.UpdateVacation:\r\n            for (let i = 0; i < newAppState.vacations.length; i++) {\r\n                if (newAppState.vacations[i].id === action.payload.id) {\r\n                    let vacation : Vacation;\r\n                    vacation = action.payload;\r\n                    console.log(vacation);\r\n                    if (newAppState.vacations[i].isFollowing){\r\n                        vacation.isFollowing = true;\r\n                    }\r\n                    else{\r\n                        vacation.isFollowing = false;\r\n                    }\r\n                    newAppState.vacations.splice(i, 1, vacation);\r\n                }\r\n            }\r\n            break;\r\n        case ActionType.follow:\r\n            newAppState.vacations.map((vacation) => { \r\n                \r\n                if (vacation.id === action.payload) {\r\n                    vacation.followers++;\r\n                    vacation.isFollowing = true;\r\n                }\r\n            });\r\n            break;\r\n        case ActionType.unfollow:\r\n            newAppState.vacations.map((vacation) => {\r\n                if (vacation.id === action.payload) {\r\n                    vacation.followers--;\r\n                    vacation.isFollowing = false;\r\n                }\r\n            });\r\n            break;\r\n        case ActionType.getSocket:\r\n            newAppState.socket = action.payload;\r\n            break;\r\n    }\r\n\r\n    // After returning the new state, it's being published to all subscribers\r\n    // Each component will render itself based on the new state\r\n    return newAppState;\r\n}","export default class Vacation {\r\n    public constructor(\r\n        public destination: string,\r\n        public description: string,\r\n        public imageUrl: string,\r\n        public startDate: string,\r\n        public endDate: string,\r\n        public price: number,\r\n        public id?: number,\r\n        public isFollowing?: boolean,\r\n        public followers?: number\r\n    ) {}\r\n\r\n}","import React, { Component, ChangeEvent } from 'react';\r\nimport Vacation from '../../models/Vacation';\r\nimport \"./vacationCardForAdmin.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit,faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport { store } from '../../redux/store';\r\nimport { ActionType } from '../../redux/action-type';\r\n\r\n\r\n\r\ninterface VacationProps {\r\n    vacation?: Vacation\r\n}\r\n\r\ninterface VacationState {\r\n    vacation: Vacation,\r\n    isEditing: boolean,\r\n    isNewVacation: boolean\r\n}\r\n\r\nexport default class VacationCardForAdmin extends Component<VacationProps, VacationState>{\r\n    \r\n    \r\n    public constructor(props: VacationProps) {\r\n        super(props);\r\n        if(props.vacation !== undefined){\r\n            this.state = { vacation: this.props.vacation, isEditing: false, isNewVacation: false }\r\n        }\r\n        //if there is no props, we will treat this component as an empty vacation,\r\n        //and the only thing we would be able to do with it is to add vacation (after filling all the fields)\r\n        else{\r\n            this.state = { vacation: new Vacation(\"\",\"\",\"\",this.getTodayDate(),this.getTodayDate(),1), isEditing: true, isNewVacation: true }\r\n        }\r\n    }\r\n\r\n    //when clicking on the pencil icon, changing the view of the component to editable one\r\n    private edit = () => {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    private deleteVacation = async () => {\r\n        //if the vacation is new, there is no deleting option\r\n        if(!this.state.isNewVacation){\r\n            try {\r\n                //delete vacation from DB\r\n                await axios.delete<void>(\"http://34.65.179.31:3001/vacations/\"+this.state.vacation.id);\r\n                //delete vacation from store\r\n                store.dispatch({ type: ActionType.DeleteVacation, payload: this.state.vacation.id });\r\n            }\r\n            catch (e) {\r\n                alert(e.response.data.error);\r\n            }\r\n        }\r\n    }\r\n    private updateVacation = async () => {\r\n        try{\r\n            //update DB\r\n            await axios.put<void>(\"http://34.65.179.31:3001/vacations/\", this.state.vacation);\r\n            //update store\r\n            store.dispatch({ type: ActionType.UpdateVacation, payload: this.state.vacation});\r\n            //changing the view to not editable after editing is complete\r\n            this.setState({ isEditing: false });\r\n        }\r\n        catch(e){\r\n            alert(e.response.data.error);\r\n        }\r\n    }\r\n\r\n    private discardChanges = async () => {\r\n        //if we want to cancel changes, get the initial vacation data (from props)\r\n        const vacation = this.props.vacation;\r\n        this.setState({ vacation });\r\n        this.setState({ isEditing: false });\r\n    }\r\n\r\n    private setDestination = (args: ChangeEvent<HTMLInputElement>) => {\r\n        let vacation = { ...this.state.vacation }\r\n        vacation.destination = args.target.value;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setDescription = (args: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let vacation = { ...this.state.vacation }\r\n        vacation.description = args.target.value;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        let vacation = { ...this.state.vacation };\r\n        const price = +args.target.value;\r\n        //can't change the price to anything other then positive number\r\n        if(typeof(price) === \"number\" && price>0){\r\n            vacation.price = price;\r\n        }\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setStartDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        let vacation = { ...this.state.vacation }\r\n        const value = args.target.value;\r\n        const date = this.getDateFormatToDisplay(value);\r\n        vacation.startDate = date;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setEndDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        let vacation = { ...this.state.vacation }\r\n        const value = args.target.value;\r\n        const date = this.getDateFormatToDisplay(value);\r\n        vacation.endDate = date;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setUrl = (args: ChangeEvent<HTMLInputElement>) => {\r\n        let vacation = { ...this.state.vacation }\r\n        vacation.imageUrl = args.target.value;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private addVacation = async () => {\r\n        try {\r\n            //getting the new vacation update from the server,\r\n            //because we need vacation with ID and following status, and updating the store.\r\n            const addedVacation = await axios.post<Vacation>(\"http://34.65.179.31:3001/vacations/\", this.state.vacation);\r\n            store.dispatch({ type: ActionType.AddVacation, payload: addedVacation.data });\r\n            //reset the state for the next empty vacation card\r\n            this.setState({ vacation: new Vacation(\"\",\"\",\"\",this.getTodayDate(),this.getTodayDate(),1), isEditing: true, isNewVacation: true })\r\n        }\r\n        catch (e) {\r\n            alert(e.response.data.error);\r\n        }\r\n    }\r\n\r\n    private getDateFormatToDisplay = (dateString : string) =>{\r\n        return dateString.slice(8,10) + \"/\" + dateString.slice(5, 7) + \"/\" + dateString.slice(0, 4);\r\n    }\r\n\r\n    //getting the date of today in the correct format, for the new vacation card\r\n    public getTodayDate = ()=>{\r\n        let todayDate = new Date().toJSON();\r\n        return this.getDateFormatToDisplay(todayDate);\r\n    }\r\n\r\n    private getDateFormatForHtmlInputTag = (dateString : string) =>{\r\n        let dateArr = dateString.split(\"/\");\r\n        let retString = dateArr[2]+ \"-\" +dateArr[1]+ \"-\" +dateArr[0];\r\n        return retString;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"vacationAdmin\">\r\n                <div className=\"icons\">\r\n                    <FontAwesomeIcon className=\"edit\" icon={faEdit} onClick={this.edit} />&nbsp;\r\n                    <FontAwesomeIcon className=\"delete\" icon={faTrashAlt} onClick={this.deleteVacation} />\r\n                </div>\r\n                {!this.state.isEditing && \r\n                <div className=\"form\">\r\n                    destination: {this.state.vacation.destination}\r\n                    <br />\r\n                    description: {this.state.vacation.description}\r\n                    <br />\r\n                    price: {this.state.vacation.price}$\r\n                    <br />\r\n                    start: {this.state.vacation.startDate}\r\n                    <br />\r\n                    end: {this.state.vacation.endDate}\r\n                    <br />\r\n                    followers: {this.state.vacation.followers}\r\n                    <br />\r\n                </div>}\r\n\r\n\r\n                {this.state.isEditing &&\r\n                    <div className=\"form\">\r\n                        <label htmlFor=\"destination\">Destination:</label>\r\n                        <input type=\"text\" name=\"destination\"\r\n                            value={this.state.vacation.destination} onChange={this.setDestination} />\r\n                        <label htmlFor=\"description\">Description:</label>\r\n                        <textarea name=\"description\" rows={4} cols={30} maxLength={95}\r\n                            value={this.state.vacation.description} onChange={this.setDescription}/>\r\n                        <label htmlFor=\"price\">price(in $):</label>\r\n                        <input type=\"text\" name=\"price\"\r\n                            value={this.state.vacation.price} onChange={this.setPrice} />\r\n                        <label htmlFor=\"startDate\">Start Date:</label>\r\n                        <input type=\"date\" name=\"startDate\"\r\n                            placeholder=\"dd/mm/yy\" value={this.getDateFormatForHtmlInputTag(this.state.vacation.startDate)} onChange={this.setStartDate}/>\r\n                        <label htmlFor=\"endDate\">End Date:</label>\r\n                        <input type=\"date\" name=\"endDate\"\r\n                            placeholder=\"dd/mm/yy\" value={this.getDateFormatForHtmlInputTag(this.state.vacation.endDate)} onChange={this.setEndDate} />\r\n                        <label htmlFor=\"imageUrl\">Image URL:</label>\r\n                        <input type=\"text\" name=\"imageUrl\"\r\n                            value={this.state.vacation.imageUrl} onChange={this.setUrl} /><br/>\r\n                        {!this.state.isNewVacation && <input type=\"button\" onClick={this.discardChanges} value=\"cancel\" />}\r\n                        {!this.state.isNewVacation && <input type=\"button\" onClick={this.updateVacation} value=\"submit\" />}\r\n                        {this.state.isNewVacation && <input type=\"button\" onClick={this.addVacation} value=\"add new vacation\" />}\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Unsubscribe } from 'redux';\r\nimport { io } from 'socket.io-client';\r\nimport Vacation from '../../models/Vacation';\r\nimport { ActionType } from '../../redux/action-type';\r\nimport { store } from '../../redux/store';\r\nimport VacationCardForAdmin from \"../vacation-card-for-admin/vacationCardForAdmin\";\r\nimport \"./admin.css\"\r\n\r\ninterface AdminState {\r\n    vacationsArr : Vacation[];\r\n}\r\n\r\nexport default class Admin extends Component<any,AdminState>{\r\n\r\n    private unsubscribeStore : Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {vacationsArr : []};\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            this.setState({ vacationsArr: store.getState().vacations});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        this.adminValidation();\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\");\r\n        //get all vacations from DB\r\n        const response = await axios.get<Vacation[]>(\"http://34.65.179.31:3001/vacations/\");\r\n        const vacationsArr = response.data;\r\n        store.dispatch({ type: ActionType.GetAllVacations, payload: vacationsArr});\r\n        //saving the vacation in local storage, so after refresh the data will be saved,\r\n        //without it, the charts component will colapse after refresh, because there isn't axios request there\r\n        sessionStorage.setItem(\"vacations\",JSON.stringify(vacationsArr));\r\n        //create connection to the socket, and keeping the socket object in store,\r\n        //because logout is in another component \r\n        const socket = io('http://34.65.179.31:3002/', { query: \"token=\" + sessionStorage.getItem(\"token\") }).connect();\r\n        store.dispatch({ type: ActionType.getSocket, payload: socket});\r\n    }\r\n\r\n    //preventing the option to nevigate to admin without login\r\n    private adminValidation = () =>{\r\n        if (store.getState().userType === \"CUSTOMER\"){\r\n            this.props.history.push(\"/vacations\");\r\n        }\r\n        if (store.getState().userType === \"\"){\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        return (\r\n            <div className=\"admin\">\r\n                {this.state.vacationsArr.map( (vacation) => {\r\n                    return <VacationCardForAdmin vacation={vacation} key={vacation.id}/>\r\n                })}\r\n                <VacationCardForAdmin key={0}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { VictoryBar, VictoryChart, VictoryAxis } from \"victory\";\r\nimport { store } from '../../redux/store';\r\n\r\n\r\nexport default class Charts extends Component<any> {\r\n    public componentDidMount(){\r\n        this.adminValidation();\r\n    }\r\n\r\n    private adminValidation = () =>{\r\n        if (store.getState().userType === \"CUSTOMER\"){\r\n            this.props.history.push(\"/vacations\");\r\n        }\r\n        if (store.getState().userType === \"\"){\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n    private getVacationDataForChart = () => {\r\n        let vacationsArr = store.getState().vacations;\r\n        let vacationsDataArr = [];\r\n        for (let i = 0; i < vacationsArr.length; i++) {\r\n            let vac = vacationsArr[i];\r\n            vacationsDataArr.push({ vacation: vac.destination, followers: vac.followers });\r\n        }\r\n        return vacationsDataArr;\r\n    }\r\n\r\n    private vacations = this.getVacationDataForChart();\r\n\r\n    private getTickValues = ()=>{\r\n        let retArr = [];\r\n        for(let i = 0;i<this.vacations.length;i++){\r\n            retArr.push(i+1);\r\n        }\r\n        return retArr;\r\n    }\r\n\r\n    private getTickFormat = ()=>{\r\n        let retArr = [];\r\n        for(let i = 0;i<this.vacations.length;i++){\r\n            retArr.push(this.vacations[i].vacation);\r\n        }\r\n        return retArr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <VictoryChart domainPadding={25}>\r\n                <VictoryAxis\r\n                    style={{\r\n                        tickLabels: {\r\n                          fontSize: 8\r\n                        }\r\n                      }}\r\n                    tickValues={this.getTickValues()}\r\n                    tickFormat={this.getTickFormat()}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    label=\"followers\"\r\n                    tickFormat={(x) => (x)}\r\n                />\r\n                <VictoryBar\r\n                    data={this.vacations}\r\n                    x=\"vacation\"\r\n                    y=\"followers\"\r\n                />\r\n            </VictoryChart>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./header.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\n\r\ninterface HeaderState {\r\n    userType : string;\r\n}\r\n\r\nexport class Header extends Component<any,HeaderState>{\r\n    private unsubscribe: Unsubscribe;\r\n    public constructor(props: any) {\r\n        super(props);\r\n        //keeping the user type in state, so we can show the relevant button(s) on screen\r\n        this.state = {userType : store.getState().userType};\r\n\r\n        this.unsubscribe=store.subscribe(() => {\r\n            this.setState({ userType: store.getState().userType});\r\n        });\r\n    }\r\n    public componentWillUnmount(){\r\n        this.unsubscribe();\r\n    }\r\n\r\n    private logout = () => {\r\n        //when logging out, remove all the information about the user from session storage & store\r\n        store.dispatch({type:ActionType.ChangeLoginStatus, payload:\"\"});\r\n        sessionStorage.removeItem(\"userType\");\r\n        sessionStorage.removeItem(\"token\");\r\n        //go to login page\r\n        this.props.history.push('/');\r\n        //get the socket object from store, and disconnect\r\n        let socket = store.getState().socket;\r\n        socket.disconnect();\r\n    }\r\n\r\n    private goToReports = () =>{\r\n        this.props.history.push('/charts');\r\n    }\r\n\r\n    private goToAdmin = () =>{\r\n        this.props.history.push('/admin');\r\n    }\r\n\r\n    private goToLogin = () =>{\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <h1>VacationPlanner.com</h1>\r\n                {this.state.userType === \"ADMIN\" && <div>\r\n                <input type=\"button\" value=\"Logout\" onClick={this.logout}></input>\r\n                <input type=\"button\" value=\"Reports\" onClick={this.goToReports}></input>\r\n                <input type=\"button\" value=\"Vacations\" onClick={this.goToAdmin}></input>\r\n                </div>}\r\n                {this.state.userType === \"CUSTOMER\" && <div>\r\n                <input type=\"button\" value=\"Logout\" onClick={this.logout}></input>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default withRouter(Header);","import React, { Component, ChangeEvent } from 'react';\r\nimport axios from \"axios\";\r\nimport successfulLoginDetails from '../../models/successfulLoginDetails';\r\nimport \"./login.css\";\r\nimport { store } from '../../redux/store';\r\nimport { ActionType } from '../../redux/action-type';\r\n\r\ninterface LoginState {\r\n    username: string,\r\n    password: string,\r\n    isFailedLogin:boolean\r\n}\r\n\r\nexport default class Login extends Component<any, LoginState>{\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isFailedLogin: false\r\n        };\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        //if the user is already logged in, go to the relevant page for him\r\n        if(sessionStorage.getItem(\"userType\") === \"ADMIN\"){\r\n            this.props.history.push('/admin');\r\n        }\r\n        else if(sessionStorage.getItem(\"userType\") === \"CUSTOMER\"){\r\n            this.props.history.push('/vacations');\r\n        }\r\n    }\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const username = args.target.value;\r\n        this.setState({ username });\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n        this.setState({ password });\r\n    }\r\n\r\n    private login = async() => {\r\n        try {\r\n            const response = await axios.post<successfulLoginDetails>(\"http://34.65.179.31:3001/users/login\", this.state);\r\n            const serverResponse = response.data;\r\n            axios.defaults.headers.common['Authorization'] = serverResponse.token;\r\n            sessionStorage.setItem(\"token\",serverResponse.token);\r\n            store.dispatch({ type: ActionType.ChangeLoginStatus, payload: serverResponse.type });\r\n            \r\n            if (serverResponse.type === \"ADMIN\") {\r\n                this.props.history.push('/admin')\r\n                sessionStorage.setItem(\"userType\", \"ADMIN\");\r\n            }\r\n            else if (serverResponse.type === \"CUSTOMER\") {\r\n                this.props.history.push('/vacations')\r\n                sessionStorage.setItem(\"userType\", \"CUSTOMER\");\r\n            }\r\n        }\r\n        catch (err) {\r\n            //this will make an error message visible\r\n            this.setState({isFailedLogin:true});\r\n        }\r\n\r\n    }\r\n\r\n    private nevigateToRegister = () => {\r\n        this.props.history.push('/register');\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"loginPage\">\r\n                <div className=\"loginForm\">\r\n                    <h1>Your perfect vacation starts here!</h1>\r\n                    <h1>Login or register to view all vacations</h1>\r\n                    <input type=\"text\" placeholder=\"User name\" name=\"username\"\r\n                        value={this.state.username} onChange={this.setUserName} /><br />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                        value={this.state.password} onChange={this.setPassword} /><br />\r\n                    {this.state.isFailedLogin && <p>Username or password does not exist</p>}\r\n                    <input type=\"button\" value=\"login\" onClick={this.login} className=\"loginButton\"/><br />\r\n                    <input type=\"button\" value=\"register\" onClick={this.nevigateToRegister} />\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { Component, ChangeEvent } from 'react'\r\nimport successfulLoginDetails from '../../models/successfulLoginDetails';\r\nimport { ActionType } from '../../redux/action-type';\r\nimport { store } from '../../redux/store';\r\nimport \"./register.css\";\r\n\r\ninterface RegisterState {\r\n    username: string,\r\n    password: string,\r\n    fullname: string\r\n}\r\n\r\nexport default class Register extends Component<any, RegisterState>{\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            fullname: \"\"\r\n        };\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const username = args.target.value;\r\n        this.setState({ username });\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n        this.setState({ password });\r\n    }\r\n\r\n    private setFullName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const fullname = args.target.value;\r\n        this.setState({ fullname });\r\n    }\r\n\r\n    private isPasswordValid = () =>{\r\n        if (this.state.password.length === 0 || this.state.password.length > 7){\r\n            return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    private register = async () => {\r\n        try {\r\n            //after register there's automatic login, so the axios request will return token and type (if it'll be successful)\r\n            const response = await axios.post<successfulLoginDetails>(\"http://34.65.179.31:3001/users/register\", this.state);\r\n            const serverResponse = response.data;\r\n            axios.defaults.headers.common['Authorization'] = serverResponse.token;\r\n            sessionStorage.setItem(\"token\",serverResponse.token);\r\n            store.dispatch({ type: ActionType.ChangeLoginStatus, payload: serverResponse.type });\r\n            //there's no chance the user type will be \"ADMIN\" after registration\r\n            this.props.history.push('/vacations')\r\n            sessionStorage.setItem(\"userType\", \"CUSTOMER\");\r\n        }\r\n        catch (e) {\r\n            alert(e.response.data.error);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"registerPage\">\r\n                <div className=\"registerForm\">\r\n                    <h1>Fill in your details to start exploring</h1>\r\n                    <input type=\"text\" placeholder=\"User name\" name=\"username\"\r\n                        value={this.state.username} onChange={this.setUserName} /><br />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                        value={this.state.password} onChange={this.setPassword} /><br />\r\n                    <input type=\"text\" placeholder=\"Full Name (optional)\" name=\"fullName\"\r\n                        value={this.state.fullname} onChange={this.setFullName} /><br />\r\n                    {!this.isPasswordValid() && <p>password must be at least 8 characters</p>}\r\n                    <input type=\"button\" value=\"register\" onClick={this.register} /><br />\r\n                    <a href=\"/login\">Back to login</a>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Vacation from '../../models/Vacation';\r\nimport \"./vacationCard.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport { store } from '../../redux/store';\r\nimport { ActionType } from '../../redux/action-type';\r\n\r\n\r\ninterface VacationProps {\r\n    vacation: Vacation\r\n}\r\n\r\nexport default class VacationCard extends Component<VacationProps>{\r\n    public constructor(props: VacationProps) {\r\n        super(props);   \r\n    }\r\n\r\n    private follow = async () => {\r\n        try {\r\n            //add follow in DB\r\n            await axios.post<void>(\"http://34.65.179.31:3001/vacations/add-follow\", { vacationId: this.props.vacation.id });\r\n            //add follow in client (store)\r\n            store.dispatch({type: ActionType.follow, payload: this.props.vacation.id});\r\n        }\r\n        catch (e) {\r\n            alert(e.response.data.error);\r\n        }\r\n    }\r\n\r\n    private unfollow = async () => {\r\n        try {\r\n            //remove follow in DB\r\n            await axios.delete<void>(\"http://34.65.179.31:3001/vacations/unfollow/\" + this.props.vacation.id);\r\n            //remove follow in client (store)\r\n            store.dispatch({type: ActionType.unfollow, payload: this.props.vacation.id});\r\n        }\r\n        catch (e) {\r\n            alert(e.response.data.error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"vacation\">\r\n                <img src={this.props.vacation.imageUrl} alt=\"Sorry! can't load content\"></img>\r\n                <div className=\"destination\">{this.props.vacation.destination}</div>\r\n                <div className=\"description\">{this.props.vacation.description}</div>\r\n                <div className=\"dates-and-followers\">{this.props.vacation.startDate}-{this.props.vacation.endDate}<br />\r\n                followers: {this.props.vacation.followers}</div>\r\n                <div className=\"price\">\r\n                    {this.props.vacation.price}$\r\n                </div>\r\n                {this.props.vacation.isFollowing == true &&\r\n                    <div className=\"follow\">\r\n                        <FontAwesomeIcon className=\"heart\" icon={faHeart} size=\"2x\" onClick={this.unfollow} />\r\n                        <span className=\"unfollow-tooltip\">unfollow</span>\r\n                    </div>}\r\n                {this.props.vacation.isFollowing == false &&\r\n                    <div className=\"follow\">\r\n                        <FontAwesomeIcon className=\"emptyheart\" icon={faHeart} size=\"2x\" onClick={this.follow} />\r\n                        <span className=\"follow-tooltip\">follow</span>\r\n                    </div>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { io } from \"socket.io-client\";\r\nimport Vacation from \"../../models/Vacation\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { store } from \"../../redux/store\";\r\nimport VacationCard from \"../vacation-card/vacationCard\";\r\nimport \"./vacations.css\";\r\n\r\n\r\ninterface VacationsState {\r\n    vacationsArr : Vacation[];\r\n}\r\n\r\nexport default class Vacations extends Component<any, VacationsState>{\r\n\r\n    private unsubscribeStore : Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {vacationsArr : []};\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            this.setState({ vacationsArr: store.getState().vacations});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.unsubscribeStore();\r\n    }\r\n    \r\n    public async componentDidMount() {\r\n        this.customerValidation();\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\");\r\n        //get all vacations from DB\r\n        const vacations = await this.getVacations();\r\n        store.dispatch({ type: ActionType.GetAllVacations, payload: vacations});\r\n        \r\n        //create connection to the socket, and keeping the socket object in store,\r\n        //because logout is in another component \r\n        const socket = io('http://34.65.179.31:3002/', { query: \"token=\" + sessionStorage.getItem(\"token\") }).connect();\r\n        socket.on(\"DELETE_VACATION\",(vacationId:number)=>{\r\n            store.dispatch({ type: ActionType.DeleteVacation, payload: vacationId});\r\n        });\r\n        socket.on(\"UPDATE_VACATION\",(vacation:Vacation)=>{\r\n            store.dispatch({ type: ActionType.UpdateVacation, payload: vacation});\r\n        });\r\n        store.dispatch({ type: ActionType.getSocket, payload: socket});\r\n\r\n    }\r\n\r\n    //preventing the option to nevigate to vacations component without login\r\n    private customerValidation = () =>{\r\n        if (store.getState().userType === \"ADMIN\"){\r\n            this.props.history.push(\"/admin\");\r\n        }\r\n        if (store.getState().userType === \"\"){\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    private getVacations = async () =>{\r\n        const response = await axios.get<Vacation[]>(\"http://34.65.179.31:3001/vacations/\");\r\n        const vacationsArr = response.data;\r\n        //sorting the vacations, those followed by the user will be first\r\n        vacationsArr.sort((a,b) => {\r\n            return (a.isFollowing === b.isFollowing) ? 0 : a.isFollowing ? -1 : 1;\r\n        });\r\n        return vacationsArr;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"vacationsPage\">\r\n                {this.state.vacationsArr.map( (vacation) => {\r\n                    return <VacationCard vacation={vacation} key={vacation.id}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport Admin from '../admin/admin';\r\nimport Charts from '../charts/charts';\r\nimport Header from '../header/header';\r\nimport Login from \"../login/login\"\r\nimport Register from '../register/register';\r\nimport Vacations from '../vacations/vacations';\r\nimport \"./layout.css\";\r\n\r\nexport default class Layout extends Component {\r\n    public render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <section className=\"layout\">\r\n                    <header>\r\n                            <Header />\r\n                    </header>\r\n                    <main>\r\n                        <Switch>\r\n                            <Route path=\"/login\" component={Login} exact />\r\n                            <Route path=\"/vacations\" component={Vacations} exact />\r\n                            <Route path=\"/admin\" component={Admin} exact />\r\n                            <Route path=\"/register\" component={Register} exact />\r\n                            <Route path=\"/charts\" component={Charts} exact />\r\n                            <Redirect to=\"/login\" exact />\r\n                        </Switch>\r\n                    </main>\r\n                </section>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './components/layout/layout';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Layout />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}